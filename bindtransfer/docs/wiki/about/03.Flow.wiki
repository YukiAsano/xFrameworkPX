* xFrameworkPXの処理フロー

* アクションによるコントローラー指定と仮想スクリーン
Webブラウザで仮想スクリーンにアクセスする際、xFrameworkPXはリクエストのURLの拡張子が許可された拡張子((デフォルトで許可されている拡張子はhtmlです。))だった場合のみ、
アクションを実行して仮想スクリーン表示をします。

その際、アクセスしたファイルのファイル名から拡張子をのぞいたものが''アクション名''になります。
index.htmlでアクセスした場合、アクション名は''index''となります。
アクション名は、コントローラーの指定に使用される名前です。

仮想スクリーンとして、ページを表示するためにHTMLを配置するディレクトリを''Webルートディレクトリ''と呼びます。
デフォルトでは、webappディレクトリが、このWebルートディレクトリに設定されます。
Webルートディレクトリに、index.htmlを配置することでWebブラウザからアクセスしたとき、
index.htmlの仮想スクリーンとしてHTMLがブラウザに表示されます。

&img(./resources/images/docs/vscreen.png){仮想スクリーン表示の流れ};

ここでxFrameworkPXがWebルートディレクトリに存在するHTMLを表示するということはわかりました。
さらに、ユーザーはコントローラーを作成することで、仮想スクリーンの出力が実行される前に処理を挿入することができます。

* アクション実行時の処理フロー
xFrameworkPXがアクションを実行する際の処理フローについて具体的に説明します。
~
下図は、リクエストを受けてからビューが表示されるまでの主な流れになります。
&img(./resources/images/docs/flow.png){xFrameworkPXの処理フロー};

** ディスパッチャー
xFrameworkPX起動時に呼び出されれるのがディスパッチャーです。
ディスパッチャーはxFrameworkPXの動作設定をもとに実行時の環境を整え、適切なコントローラーの実行を行います。
ディスパッチャーが行う主な処理として以下のものがあります。

-xFrameworkPXの動作に関する各種設定の読込み。
-.htaccessによるアクセス制御。
-ファイル転送、バインド転送
-コントローラーの設定、生成、実行。

** ファイル転送
ファイル転送（FileTransfer）とはWebルートに存在するファイルをドキュメントルートに転送する仕組みです。
もちろんドキュメントルートにファイルが存在していればそちらが優先的に転送されます。
ファイル転送は画像やCSS、スクリプトファイルなどをWebルートに配置した時、ドキュメントルートに存在するかのように振る舞います。
また単純にファイルを転送するだけでなく、'''''If-Modified-Since'''''にも対応してるため、ブラウザキャッシュも行われます。

** バインド転送
通常Webルート(webapp)ディレクトリに配置し、xFrameworkPXの仮想コンテンツを稼働させるわけですが、
特定のURL以降をバインド転送ディレクトリ以下のディレクトリにマッピングする仕組みを、バインド転送（BindTransfer）といいます。
この'''xFrameworkPX 3.5 Documentation'''もバインド転送で配置されたコンテンツです。

** コントローラー実行
ディスパッチャーが、設定に合わせて適切なコントローラーを生成して実行します。
コントローラーは、設定された内容に合わせて各アクションの処理を実行します。

** モジュール実行
各アクションの処理中必要に応じて、コントローラーがモジュール内に定義されているメソッドを実行します。

** ビュー実行
コントローラーは、メインの処理が終了すると、ビューの表示をするための処理を実行します。
ビューは、ビューのテンプレートから参照できる変数をアサインする処理や、テンプレートをもとにHTMLを出力する処理を行います。

&br;
----

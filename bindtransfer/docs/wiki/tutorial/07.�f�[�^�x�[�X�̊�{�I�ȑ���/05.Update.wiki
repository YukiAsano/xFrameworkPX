* 基本的なデータベース操作(4)

ここでは、''$this->update''メソッドを使用した''レコードの更新''を学びます。
「'''基本的なデータベース操作(1)'''」で作成したテーブルに対して''レコードの更新''を行います。

このチュートリアルでは、次の操作を行います。

+ アプリケーションディレクトリにHTMLファイルを設置する
+ アプリケーションディレクトリにコントローラーを設置する
+ モジュールディレクトリにモジュールを設置する
+ 仮想スクリーンの動作を確認する
+ サンプル実行


* アプリケーションディレクトリにHTMLファイルを設置する

webapp下に、仮想スクリーンのテンプレートファイルとして、次のindex.htmlを設置します。
保存する文字コードは、''UTF-8''、改行コードは''LF''です。

{{{
<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="ja" xml:lang="ja">
<head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8" />
    <meta http-equiv="content-script-Type" content="text/javascript" />
    <meta http-equiv="content-style-type" content="text/css" />
    <title>基本的なデータベース操作(4)</title>
</head>
<body>
    <h1>基本的なデータベース操作(4)</h1>

    <h2>id=1のデータを更新します。</h2>
    <form action="./" method="post">

        <ul>
            <li>タイトル：<input type="text" name="title" />（文字列）</li>
            <li>内容：<input type="text" name="note" />（文字列）</li>
        </ul>

        <input type="submit" value="更新" />

    </form>

    <hr />

    <table border="1">
    <tr>
        <th>id</th>
        <th>title</th>
        <th>note</th>
        <th>modified</th>
    </tr>
    <!--{foreach from=$alldata item=item key=key}-->
    <tr>
        <td><!--{$item.id}--></td>
        <td><!--{$item.title}--></td>
        <td><!--{$item.note}--></td>
        <td><!--{$item.modified}--></td>
    </tr>
    <!--{/foreach}-->
    </table>

</body>
</html>
}}}


* アプリケーションディレクトリにコントローラーを設置する

webapp下に、次の.index.phpを設置します。
保存する文字コードは、''UTF-8''、改行コードは''LF''です。

{{{
<?php

class index extends xFrameworkPX_Controller_Action
{
    public $modules = array('sample');

    public function execute()
    {
        if(
            isset($this->post->title) &&
            is_string($this->post->title) &&
            isset($this->post->note) &&
            is_string($this->post->note)
        ) {
            $this->sample->updateData(
                $this->post->title,
                $this->post->note
            );
        }

        $this->set(
            'alldata',
            $this->sample->getDataAll()
        );
    }
}
}}}


* モジュールディレクトリにモジュールを設置する

modules下に、次のsample.phpを設置します。

{{{
<?php

class sample extends xFrameworkPX_Model
{
    public function updateData($title, $note)
    {
        $this->update(
            array(
                'field' => array(
                    'title',
                    'note',
                ),
                'value' => array(
                    ':title',
                    ':note',
                ),
                'bind' => array(
                    'id' => 1,
                    'title' => $title,
                    'note' => $note,
                ),
                'where' => array(
                    'id = :id'
                )
            )
        );
    }

    public function getDataAll()
    {
        return $this->rowAll(
            array(
                'query' => 'SELECT * FROM ' . $this->getTableName()
            )
        );
    }
}

}}}


* 仮想スクリーンの動作を確認する

ブラウザで'''''http://yourdomain/index.html'''''にアクセスします。

入力フォームとテーブルのデータ一覧が仮想スクリーンに表示されます。
入力フォームにデータを入力して更新ボタンを押下すると、idが1のデータが入力したデータで更新されます。


* サンプル実行

下記のボタンから、ここまでのサンプルを実行することができます。

[[&img(./resources/images/demo.gif){サンプル画像};>./tutorial/db/db4/>external]]

** サンプル格納位置

'''bindtransfer/docs/tutorial/db/db4/'''
